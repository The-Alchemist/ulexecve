gvb@ix:~/tmp$ bash checksec.sh --file /usr/bin/python2.7
RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      Canary found      NX enabled    PIE enabled     No RPATH   No RUNPATH   /usr/bin/python2.7
gvb@ix:~/tmp$ bash checksec.sh --file /usr/bin/python3.8
RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Partial RELRO   Canary found      NX enabled    No PIE          No RPATH   No RUNPATH   /usr/bin/python3.8

gvb@ix:~/ulexecve/git/new$ bash ~/tmp/checksec.sh --file no-pie.out
RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Partial RELRO   No canary found   NX enabled    No PIE          No RPATH   No RUNPATH   no-pie.out
gvb@ix:~/ulexecve/git/new$ bash ~/tmp/checksec.sh --file pie.out
RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      FILE
Full RELRO      No canary found   NX enabled    PIE enabled     No RPATH   No RUNPATH   pie.out
gvb@ix:~/ulexecve/git/new$

gvb@ix:~/ulexecve/git/new$ ./ulexecve.py ./pie.out
hello
gvb@ix:~/ulexecve/git/new$ ./ulexecve.py ./no-pie.out
Segmentation fault (core dumped)
gvb@ix:~/ulexecve/git/new$ python2 ./ulexecve.py ./pie.out
hello
gvb@ix:~/ulexecve/git/new$ python2 ./ulexecve.py ./no-pie.out
hello
gvb@ix:~/ulexecve/git/new$


#!/usr/bin/env bash
echo 2 | sudo tee /proc/sys/kernel/randomize_va_space
for pie in no-pie pie; do
  exe="${pie}.out"
  gcc -O0 -std=c99 "-${pie}" "-f${pie}" -ggdb3 -o "$exe" main.c
  gdb -batch -nh \
    -ex 'set disable-randomization off' \
    -ex 'break main' \
    -ex 'run' \
    -ex 'printf "pc = 0x%llx\n", (long  long unsigned)$pc' \
    -ex 'run' \
    -ex 'printf "pc = 0x%llx\n", (long  long unsigned)$pc' \
    "./$exe" \
  ;
  echo
  echo
done



gvb@ix:~/ulexecve/git/new$ strace python2 ./ulexecve.py  no-pie.out 2>&1 | grep 0x4000
mmap(0x7fc588625000, 4096, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x4000) = 0x7fc588625000
mmap(0x7fc588626000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 7, 0x4000) = 0x7fc588626000
mmap(0x400000, 20480, PROT_READ|PROT_WRITE|PROT_SEM, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x400000
mprotect(0x400000, 4096, PROT_READ)     = 0

gvb@ix:~/ulexecve/git/new$ strace python3 ./ulexecve.py  no-pie.out 2>&1 | grep 0x4000
mmap(0x7fc479574000, 114688, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4000) = 0x7fc479574000
mmap(0x7fc478f85000, 8192, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x4000) = 0x7fc478f85000
mmap(0x400000, 20480, PROT_READ|PROT_WRITE|PROT_SEM, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7fc479911000
--- SIGSEGV {si_signo=SIGSEGV, si_code=SEGV_ACCERR, si_addr=0x400000} ---
gvb@ix:~/ulexecve/git/new$




we use %r11 as the intermediate register to tie the offset calculation logic together
